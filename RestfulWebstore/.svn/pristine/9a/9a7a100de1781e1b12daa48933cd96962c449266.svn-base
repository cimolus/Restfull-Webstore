package by.kassirov.webstore.controllers;

import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;






import by.kassirov.webstore.domain.Basket;
import by.kassirov.webstore.services.ProductService;


@Controller
public class BasketController {
	
	private static final Logger logger = LoggerFactory.getLogger(BasketController.class);
	
	@Autowired
	private ProductService productService;
	
	private Basket getBasket(HttpSession session) {
		Basket basket = (Basket) session.getAttribute("basket");
		if( basket == null )
			basket = new Basket();
		return basket;
	}
	
	@RequestMapping(value="/basket/order", method = RequestMethod.GET)
	@ResponseBody
	private boolean orderProducts() {
		//@RequestParam(value="products") String[] products 
//		for( int i = 0; i < products.length; i++ ) {
//			System.out.print(" " + products[i] );
//		}
//		System.out.println("");
		return true;
	}
	
	@RequestMapping( value = "/basket/has/{id}", method = RequestMethod.GET )
	@ResponseBody
	public boolean hasProduct(@PathVariable int id , HttpSession session) {
		Basket basket = getBasket(session);
		session.setAttribute("basket", basket);
		//session.getId();
		return basket.containsProduct(id);
	}
	
	
	@RequestMapping ( value="/basket/{id}", method=RequestMethod.POST )
	@ResponseBody
	public boolean toogleProduct(@PathVariable int id , HttpSession session) { 
		Basket basket = getBasket(session);
		boolean result;
		if ( !basket.containsProduct(id) ) {
			result = basket.addProduct(productService.getProductById(id));
		} else {
			result = basket.dropProduct(id);
		} 
		
		session.setAttribute("basket", basket);
		
		return result;
	}
	
	
	
}
